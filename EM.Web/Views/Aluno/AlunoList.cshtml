@model IEnumerable<EM.Domain.Models.Aluno>
@using EM.Domain.Models
@inject EM.Domain.Context.EscolaDbContext _context

<h1>Lista de Alunos</h1>

<a href="@Url.Action("AlunoCreate", "Aluno")" class="btn btn-primary mb-3">Cadastrar Novo Aluno</a>

<table class="table table-bordered table-striped">
    <thead class="table-dark">
        <tr>
            <th>Matrícula</th>
            <th>Nome</th>
            <th>CPF</th>
            <th>Sexo</th>
            <th>Data de Nascimento</th>
            <th>Cidade</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var aluno in Model)
    {
        var cidade = _context.Cidades.FirstOrDefault(c => c.CIDACODIGO == aluno.AlunoCidaCodigo);
        <tr>
            <td>@aluno.AlunoMatricula</td>
            <td>@aluno.AlunoNome</td>
            <td>
                @{
                    string cpfFormatado = aluno.AlunoCPF.Length == 11
                        ? Convert.ToUInt64(aluno.AlunoCPF).ToString(@"000\.000\.000\-00")
                        : aluno.AlunoCPF;
                }
                <span>@cpfFormatado</span>
            </td>
            <td>@(aluno.AlunoSexo == "0" ? "Masculino" : aluno.AlunoSexo == "1" ? "Feminino" : "")</td>
            <td>@aluno.AlunoNascimento.ToShortDateString()</td>
            <td>@(cidade != null ? cidade.CIDADESCRICAO : "Não encontrada")</td>
            <td>
                <a href="@Url.Action("AlunoEdit", new { AlunoMatricula = aluno.AlunoMatricula })" class="btn btn-sm btn-warning">Editar</a>
                <a href="@Url.Action("AlunoDelete", new { AlunoMatricula = aluno.AlunoMatricula })" class="btn btn-sm btn-danger">Excluir</a>
            </td>
        </tr>
    }
    </tbody>
</table>
